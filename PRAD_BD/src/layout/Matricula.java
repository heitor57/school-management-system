/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package layout;

import dao.AlunosDAO;
import dao.DisciplinasDAO;
import dao.MatriculasDAO;
import dao.ProfessoresDAO;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.List;
import javabeans.Alunos;
import javabeans.Disciplinas;
import javabeans.Matriculas;
import javabeans.Professores;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Suporte
 */
public class Matricula extends javax.swing.JDialog {
    MatriculasDAO dao;
    String txtalunoupd, txtdisciplinaupd;
    /**
     * Creates new form Cidade
     */
    public Matricula(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    public Matricula(Disciplinas obj){
        initComponents();
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeladeLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeladeLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeladeLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeladeLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Matricula dialog = new Matricula(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
                
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtaluno = new javax.swing.JTextField();
        txtdisciplina = new javax.swing.JTextField();
        btsalvar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaalunos = new javax.swing.JTable();
        btremover = new javax.swing.JButton();
        cboaluno = new javax.swing.JComboBox<>();
        cbodisciplina = new javax.swing.JComboBox<>();
        btatualizar = new javax.swing.JButton();

        txtaluno.setText("jTextField1");

        txtdisciplina.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Disciplina");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        btsalvar.setText("Salvar");
        btsalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btsalvarActionPerformed(evt);
            }
        });

        tabelaalunos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo Aluno", "Codigo Disciplina"
            }
        ));
        tabelaalunos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaalunosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaalunos);

        btremover.setText("Remover");
        btremover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btremoverActionPerformed(evt);
            }
        });

        cboaluno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um aluno" }));
        cboaluno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboalunoItemStateChanged(evt);
            }
        });

        cbodisciplina.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione uma disciplina" }));
        cbodisciplina.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbodisciplinaItemStateChanged(evt);
            }
        });

        btatualizar.setText("Atualizar");
        btatualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btatualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbodisciplina, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboaluno, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btsalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btremover)
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btatualizar)
                        .addGap(86, 86, 86))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboaluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btremover)
                    .addComponent(btsalvar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbodisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btatualizar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btsalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btsalvarActionPerformed
        Salvar();
    }//GEN-LAST:event_btsalvarActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        Listar();
    }//GEN-LAST:event_formWindowActivated

    private void tabelaalunosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaalunosMouseClicked

        try{
            DisciplinasDAO dao_t = new DisciplinasDAO();
            List<Disciplinas> lista = dao_t.listarDisciplinas();
            for(Disciplinas u:lista){
                if(u.getId() == Integer.parseInt(tabelaalunos.getValueAt(tabelaalunos.getSelectedRow(),1).toString()))
                 { 
                     cbodisciplina.setSelectedItem(u.getNome());
                     txtdisciplina.setText(String.valueOf(u.getId()));
                     txtdisciplinaupd= String.valueOf(u.getId());
                     break;
                 }
            }
            
            AlunosDAO dao_t_ = new AlunosDAO();
            List<Alunos> lista_ = dao_t_.listarAlunos();
            for(Alunos u:lista_){
                 if(u.getId() == Integer.parseInt(tabelaalunos.getValueAt(tabelaalunos.getSelectedRow(),0).toString()))
                 { 
                     cboaluno.setSelectedItem(u.getNome()); 
                     txtaluno.setText(String.valueOf(u.getId()));
                     txtalunoupd = String.valueOf(u.getId());
                     break;
                 }
            }
           
            
        }catch(Exception e){

        }
    }//GEN-LAST:event_tabelaalunosMouseClicked

    private void btremoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btremoverActionPerformed
        Remover();
    }//GEN-LAST:event_btremoverActionPerformed

    private void cboalunoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboalunoItemStateChanged
        if(cboaluno.getSelectedItem().toString() != cboaluno.getItemAt(0)){
            AlunosDAO aluno = new AlunosDAO();
            try{
                txtaluno.setText(String.valueOf(aluno.getAluno(cboaluno.getSelectedItem().toString())));
            }catch(Exception e){

            }
        }
    }//GEN-LAST:event_cboalunoItemStateChanged

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try{
            DisciplinasDAO dao_t = new DisciplinasDAO();
            List<Disciplinas> lista = dao_t.listarDisciplinas();
            for(Disciplinas u:lista){
                cbodisciplina.addItem(u.getNome());
            }
            
            AlunosDAO dao_t_ = new AlunosDAO();
            List<Alunos> lista_ = dao_t_.listarAlunos();
            for(Alunos u:lista_){
                cboaluno.addItem(u.getNome());
            }
                    
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_formWindowOpened

    private void cbodisciplinaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbodisciplinaItemStateChanged
        if(cbodisciplina.getSelectedItem().toString() != cbodisciplina.getItemAt(0)){
            DisciplinasDAO disciplinas = new DisciplinasDAO();
            try{
                txtdisciplina.setText(String.valueOf(disciplinas.getDisciplina(cbodisciplina.getSelectedItem().toString())));
            }catch(Exception e){

            }
        }
    }//GEN-LAST:event_cbodisciplinaItemStateChanged

    private void btatualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btatualizarActionPerformed
        Atualizar();
    }//GEN-LAST:event_btatualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btatualizar;
    private javax.swing.JButton btremover;
    private javax.swing.JButton btsalvar;
    private javax.swing.JComboBox<String> cboaluno;
    private javax.swing.JComboBox<String> cbodisciplina;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaalunos;
    private javax.swing.JTextField txtaluno;
    private javax.swing.JTextField txtdisciplina;
    // End of variables declaration//GEN-END:variables
    void Novo(){
        txtaluno.setText("");
        txtdisciplina.setText("");
        cboaluno.setSelectedIndex(0);
        cbodisciplina.setSelectedIndex(0);
    }
    void Remover(){
        try{
            
            Matriculas obj = new Matriculas();
            obj.setDid(Integer.parseInt(txtdisciplina.getText()));
            obj.setAid(Integer.parseInt(txtaluno.getText()));
            dao = new MatriculasDAO();
            dao.removerMatricula(obj);
            Novo();
            
            JOptionPane.showMessageDialog(null,"Operação feita realizado com sucesso");
        } catch(Exception e){
            JOptionPane.showMessageDialog(null,"Erro na operação ");
            JOptionPane.showMessageDialog(null,e.toString());
        }
    }
    void Salvar(){
        try{
            
            Matriculas obj = new Matriculas();
            obj.setDid(Integer.parseInt(txtdisciplina.getText()));
            obj.setAid(Integer.parseInt(txtaluno.getText()));
            dao = new MatriculasDAO();
            dao.cadastrarMatricula(obj);
            
            JOptionPane.showMessageDialog(null,"Cadastro realizado com sucesso");
        } catch(Exception e){
            JOptionPane.showMessageDialog(null,"Erro ao cadastrar ");
            JOptionPane.showMessageDialog(null,e.toString());
        }
    }
    void Listar(){
        try{
            MatriculasDAO dao = new MatriculasDAO();
            List<Matriculas> listaralunos = dao.listarMatriculas();
            DefaultTableModel modelo = (DefaultTableModel) tabelaalunos.getModel();
            modelo.setNumRows(0);
            
            for(Matriculas lc : listaralunos){
                modelo.addRow(new Object[]{
                        lc.getAid(),
                        lc.getDid()
                        });
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }
    void Atualizar(){
        try{
            
            Matriculas obj = new Matriculas();
            obj.setDid(Integer.parseInt(txtdisciplina.getText()));
            obj.setAid(Integer.parseInt(txtaluno.getText()));
            dao = new MatriculasDAO();
            dao.alterarMatricula(obj,txtalunoupd,txtdisciplinaupd);
            
            JOptionPane.showMessageDialog(null,"Atualizado com sucesso");
        } catch(Exception e){
            JOptionPane.showMessageDialog(null,e.toString());
        }
    }
}
